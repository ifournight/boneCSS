// Utilities
// -------------------------

// http://www.stubbornella.org/content/2009/07/23/overflow-a-secret-benefit/
@mixin clearfix() {
	overflow:hidden;
	_overflow:visible;
	zoom:1;
}

// User select
// For selecting text on the page
@mixin user-select($select) {
  -webkit-user-select: $select;
     -moz-user-select: $select;
      -ms-user-select: $select; // IE10+
          user-select: $select;
}

// box-shadow helper
@mixin box-shadow($box-shadow...) {
	-webkit-box-shadow: $box-shadow; // iOS <4.3 & Android <4.1
			box-shadow: $box-shadow;
}

// transition helper
@mixin transition($transition...) {
	-webkit-transition: $transition;
			transition: $transition;
}

// opacity helper
@mixin opacity($opacity) {
	opacity: $opacity;
	// IE8 filter
	$opacity-ie: ($opacity * 100);
	filter: #{alpha(opacity=$opacity-ie)};
}

// Grid System
// -----------

// Centered container element
@mixin make-container {
	margin-left: auto;
	margin-right: auto;
	padding-left: ($grid-gutter-width / 2);
	padding-right: ($grid-gutter-width / 2);

	@include clearfix();
}

// Basic wrapper for grid system
@mixin make-row($gutter: $grid-gutter-width) {
	margin-left: ($gutter / -2);
	margin-right: ($gutter / -2);
	@include clearfix();
}

// Grid core properties
// 
// Give each column the core properties, including:
// min-height: 1px *Minimal height*
// padding-left/ right *column gutter*
// box-sizing *box model sizing*
@mixin column-core() {
	position: relative;
	min-height: 1px;

	padding-left: ($grid-gutter-width / 2);
	padding-right: ($grid-gutter-width / 2);

	box-sizing: border-box;	
}

// Grid generator
// 
// [Non-responsive Edition]
@mixin make-column() {
	$i: 1;
	$list: "";
	$list: ".col-#{$i}";
	@for $i from (1 + 1) through $grid-columns {
		$list: "#{$list}, .col-#{$i}";
	}
	#{$list} {
		@include column-core();
		float: left;
	}
}

// Grid generator
// 
// [Responsive Edition]

@mixin make-r-column() {
	$i: 1;
	$list: "";
	$list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
	@for $i from (1 + 1) through $grid-columns {
		$list: "#{$list}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
	}

	#{$list} {
		@include column-core();
	}
}

// float-column is isolated so column can be floated
// under given media query
@mixin float-r-column($class) {
	$i: 1;
	$list: "";
	$list: ".col-#{$class}-#{$i}";
	@for $i from (1 + 1) through $grid-columns {
		$list: "#{$list}, .col-#{$class}-#{$i}";
	}
	#{$list} {
		float: left;
	}
}

// Calculate column width with
// $grid-columns
// 
// [Responsive Edition]
@mixin calc-r-column-width($class) {
	$i: 1;
	@for $i from 1 through $grid-columns {
		.col-#{$class}-#{$i} {
			width: percentage(($i / $grid-columns));
		}
	}
}

// Use this method under given media query to generate
// grid columns for each media query breakpoints
@mixin make-r-grid($class) {
	@include float-r-column($class);
	@include calc-r-column-width($class);
}

// Calculate column width with
// $grid-columns
// 
// [Non-responsive Edition]
@mixin calc-column-width() {
	$i: 1;
	@for $i from 1 through $grid-columns {
		.col-#{$i} {
			width: percentage(($i / $grid-columns));
		}
	}
}

// Generate non-responsive grid columns
@mixin make-grid() {
	@include calc-column-width();
}

// Give the form-control a focus style with given color
@mixin form-control-focus($color: $input-border-focus) {
	$color-rgba: rgba(red($color), green($color), blue($color), .6);
	&:focus {
		border-color: $color;
		outline: 0;
		@include box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 8px $color-rgba);
	}
}

// Set the input's placeholder style with given color
@mixin placeholder($color) {
	&::-moz-placeholder { 
		color: $color;
		opacity: 1;
	}
	&::-ms-input-placeholder {
		color: $color;
	}
	&::-webkit-input-placeholder {
		color: $color;
	}
}

// Button sizes
// ------------
@mixin button-size($padding-v, $padding-h, $font-size, $line-height, $border-radius) {
	padding: $padding-v $padding-h;
	font-size: $font-size;
	line-height: $line-height;
	border-radius: $border-radius;
}

// Button variants
// -----------------------------
// Give button default style, :hover, :focus, :active, .disabled style.
@mixin button-variant($color, $background, $border) {
	color: $color;
	background-color: $background;
	border-color: $border;

	&:hover,
	&:focus,
	&:active,
	&.active {
		color: $color;
		background-color: darken($background, 8%);
			border-color: darken($background, 12%);
	}

	&:active,
	&.active {
		background-image: none;
	}

	&.disabled,
	&[disabled] {
		&,
		&:hover,
		&:focus,
		&:active,
		&.active {
			background-color: $background;
				border-color: $border;
		}
	}

}